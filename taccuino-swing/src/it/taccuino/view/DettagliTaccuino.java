/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package it.taccuino.view;

import it.taccuino.controller.NoteJpaController;
import it.taccuino.controller.TaccuinoJpaController;
import it.taccuino.controller.exceptions.NonexistentEntityException;
import it.taccuino.model.Note;
import it.taccuino.model.Taccuino;

import java.util.Iterator;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;

import javax.swing.GroupLayout;
import javax.swing.GroupLayout.Alignment;
import javax.swing.JOptionPane;
import javax.swing.LayoutStyle.ComponentPlacement;
import javax.swing.table.DefaultTableModel;

/**
 * 
 * @author gabrieleposca
 */
public class DettagliTaccuino extends javax.swing.JFrame {

	private DefaultTableModel model;
	private Taccuino taccuino;

	public DettagliTaccuino(String id) {
		initComponents();
		TaccuinoJpaController taccuinoJpaController = new TaccuinoJpaController();
		NoteJpaController noteJpaController = new NoteJpaController();

		taccuino = taccuinoJpaController.findTaccuino(Long.parseLong(id, 10));
		labelTitolo.setText(labelTitolo.getText() + taccuino.getTitolo());

		// Tabella
		model = new DefaultTableModel() {
			public boolean isCellEditable(int rowIndex, int colIndex) {
				return false; // Disallow the editing of any cell
			}
		};
		List<Note> listaNote = noteJpaController.findNoteByIdTaccuino(taccuino
				.getId());
		int i = 0;
		String[] header = { "Id", "Nota" };
		model.setColumnIdentifiers(header);
		model.setColumnCount(2);
		for (Iterator<Note> it = listaNote.iterator(); it.hasNext(); i++) {
			Note tmp = it.next();
			model.setRowCount(model.getRowCount() + 1);
			model.setValueAt(tmp.getId(), i, 0);
			model.setValueAt(tmp.getTesto().toString(), i, 1);
		}
		tableNote.setModel(model);
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
	// <editor-fold defaultstate="collapsed"
	// desc="Generated Code">//GEN-BEGIN:initComponents
	private void initComponents() {

		labelTitolo = new javax.swing.JLabel();
		jPanel2 = new javax.swing.JPanel();
		jScrollPane1 = new javax.swing.JScrollPane();
		tableNote = new javax.swing.JTable();
		buttonCancella = new javax.swing.JButton();
		buttonAggiungi = new javax.swing.JButton();
		buttonModifica = new javax.swing.JButton();

		setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

		labelTitolo.setFont(new java.awt.Font("Verdana", 0, 24)); // NOI18N
		labelTitolo.setText("Taccuino: ");

		jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());

		tableNote.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
		tableNote.setModel(new javax.swing.table.DefaultTableModel(
				new Object[][] { { null, null }, { null, null },
						{ null, null }, { null, null } }, new String[] { "Id",
						"Nota" }) {
			Class[] types = new Class[] { java.lang.String.class,
					java.lang.String.class };

			public Class getColumnClass(int columnIndex) {
				return types[columnIndex];
			}
		});
		tableNote.setRowHeight(20);
		jScrollPane1.setViewportView(tableNote);

		buttonCancella.setIcon(new javax.swing.ImageIcon(getClass()
				.getResource("/Images/delete.png"))); // NOI18N
		buttonCancella.setToolTipText("Cancella");
		buttonCancella.addMouseListener(new java.awt.event.MouseAdapter() {
			public void mouseClicked(java.awt.event.MouseEvent evt) {
				buttonCancellaMouseClicked(evt);
			}
		});

		buttonAggiungi.setIcon(new javax.swing.ImageIcon(getClass()
				.getResource("/Images/insert.png"))); // NOI18N
		buttonAggiungi.setToolTipText("Aggiungi");
		buttonAggiungi.addMouseListener(new java.awt.event.MouseAdapter() {
			public void mouseClicked(java.awt.event.MouseEvent evt) {
				buttonAggiungiMouseClicked(evt);
			}
		});

		buttonModifica.setIcon(new javax.swing.ImageIcon(getClass()
				.getResource("/Images/update.png"))); // NOI18N
		buttonModifica.setToolTipText("Modifica");
		buttonModifica.addMouseListener(new java.awt.event.MouseAdapter() {
			public void mouseClicked(java.awt.event.MouseEvent evt) {
				buttonModificaMouseClicked(evt);
			}
		});

		org.jdesktop.layout.GroupLayout jPanel2Layout = new org.jdesktop.layout.GroupLayout(
				jPanel2);
		jPanel2.setLayout(jPanel2Layout);
		jPanel2Layout
				.setHorizontalGroup(jPanel2Layout
						.createParallelGroup(
								org.jdesktop.layout.GroupLayout.LEADING)
						.add(jPanel2Layout
								.createSequentialGroup()
								.addContainerGap()
								.add(jPanel2Layout
										.createParallelGroup(
												org.jdesktop.layout.GroupLayout.LEADING)
										.add(jScrollPane1,
												org.jdesktop.layout.GroupLayout.DEFAULT_SIZE,
												589, Short.MAX_VALUE)
										.add(jPanel2Layout
												.createSequentialGroup()
												.add(0, 0, Short.MAX_VALUE)
												.add(buttonAggiungi)
												.add(18, 18, 18)
												.add(buttonModifica)
												.add(18, 18, 18)
												.add(buttonCancella)))
								.addContainerGap()));
		jPanel2Layout
				.setVerticalGroup(jPanel2Layout
						.createParallelGroup(
								org.jdesktop.layout.GroupLayout.LEADING)
						.add(jPanel2Layout
								.createSequentialGroup()
								.addContainerGap()
								.add(jPanel2Layout
										.createParallelGroup(
												org.jdesktop.layout.GroupLayout.LEADING)
										.add(buttonCancella)
										.add(buttonAggiungi)
										.add(buttonModifica))
								.addPreferredGap(
										org.jdesktop.layout.LayoutStyle.RELATED)
								.add(jScrollPane1,
										org.jdesktop.layout.GroupLayout.PREFERRED_SIZE,
										366,
										org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
								.addContainerGap(
										org.jdesktop.layout.GroupLayout.DEFAULT_SIZE,
										Short.MAX_VALUE)));

		GroupLayout layout = new GroupLayout(getContentPane());
		layout.setVerticalGroup(layout.createParallelGroup(Alignment.LEADING)
				.addGroup(
						layout.createSequentialGroup()
								.addContainerGap()
								.addComponent(labelTitolo)
								.addPreferredGap(ComponentPlacement.RELATED)
								.addComponent(jPanel2,
										GroupLayout.PREFERRED_SIZE,
										GroupLayout.DEFAULT_SIZE,
										GroupLayout.PREFERRED_SIZE)
								.addContainerGap(GroupLayout.DEFAULT_SIZE,
										Short.MAX_VALUE)));
		layout.setHorizontalGroup(layout
				.createParallelGroup(Alignment.TRAILING)
				.addGroup(
						Alignment.LEADING,
						layout.createSequentialGroup()
								.addContainerGap()
								.addGroup(
										layout.createParallelGroup(
												Alignment.LEADING)
												.addGroup(
														Alignment.TRAILING,
														layout.createSequentialGroup()
																.addGap(6)
																.addComponent(
																		jPanel2,
																		GroupLayout.DEFAULT_SIZE,
																		599,
																		Short.MAX_VALUE))
												.addComponent(labelTitolo))
								.addContainerGap()));
		getContentPane().setLayout(layout);

		pack();
	}// </editor-fold>//GEN-END:initComponents

	private void buttonCancellaMouseClicked(java.awt.event.MouseEvent evt) {// GEN-FIRST:event_buttonCancellaMouseClicked
		int rowIndex = tableNote.getSelectedRow();
		String id = tableNote.getValueAt(rowIndex, 0).toString();
		Object[] options = { "Si", "No" };
		JOptionPane optionPane = new JOptionPane();
		int value = optionPane.showOptionDialog(this,
				"Sei sicuro di cancellare la nota?", "Attenzione",
				JOptionPane.YES_NO_CANCEL_OPTION, JOptionPane.WARNING_MESSAGE,
				null, options, "No");
		if (value == JOptionPane.YES_OPTION) {
			NoteJpaController noteJpaController = new NoteJpaController();
			try {
				noteJpaController.destroy(Long.parseLong(id, 10));
			} catch (NonexistentEntityException ex) {
				Logger.getLogger(DettagliTaccuino.class.getName()).log(
						Level.SEVERE, null, ex);
			}
			JOptionPane.showMessageDialog(this,
					"Nota cancellata correttamente", "Info", 1);
			model.removeRow(rowIndex);
			tableNote.setModel(model);
		}
	}// GEN-LAST:event_buttonCancellaMouseClicked

	private void buttonAggiungiMouseClicked(java.awt.event.MouseEvent evt) {// GEN-FIRST:event_buttonAggiungiMouseClicked
		String testo;
		testo = JOptionPane.showInputDialog(null,
				"Inserisci il testo della nota", "");
		if (testo != null) {
			Note n = new Note();
			n.setTesto(testo);
			n.setTaccuino(taccuino);
			NoteJpaController noteJpaController = new NoteJpaController();
			noteJpaController.create(n);
			JOptionPane.showMessageDialog(this, "Nota creata correttamente",
					"Info", 1);
			int row = tableNote.getRowCount();
			model.setRowCount(model.getRowCount() + 1);
			model.setValueAt(n.getId(), row, 0);
			model.setValueAt(n.getTesto().toString(), row, 1);
			tableNote.setModel(model);
		}
	}// GEN-LAST:event_buttonAggiungiMouseClicked

	private void buttonModificaMouseClicked(java.awt.event.MouseEvent evt) {// GEN-FIRST:event_buttonModificaMouseClicked
		String testo;
		int rowIndex = tableNote.getSelectedRow();
		String id = tableNote.getValueAt(rowIndex, 0).toString();
		testo = JOptionPane.showInputDialog(null,
				"Inserisci il testo della nota", "");
		if (testo != null) {
			NoteJpaController noteJpaController = new NoteJpaController();
			Note n = noteJpaController.findNote(Long.parseLong(id, 10));
			n.setTesto(testo);
			try {
				noteJpaController.edit(n);
			} catch (NonexistentEntityException ex) {
				Logger.getLogger(DettagliTaccuino.class.getName()).log(
						Level.SEVERE, null, ex);
			} catch (Exception ex) {
				Logger.getLogger(DettagliTaccuino.class.getName()).log(
						Level.SEVERE, null, ex);
			}

			model.setValueAt(n.getId(), rowIndex, 0);
			model.setValueAt(n.getTesto().toString(), rowIndex, 1);
			tableNote.setModel(model);

			JOptionPane.showMessageDialog(this,
					"Nota modificata correttamente", "Info", 1);
		}
	}// GEN-LAST:event_buttonModificaMouseClicked

	/**
	 * @param args
	 *            the command line arguments
	 */
	public static void main(String args[]) {
		/* Set the Nimbus look and feel */
		// <editor-fold defaultstate="collapsed"
		// desc=" Look and feel setting code (optional) ">
		/*
		 * If Nimbus (introduced in Java SE 6) is not available, stay with the
		 * default look and feel. For details see
		 * http://download.oracle.com/javase
		 * /tutorial/uiswing/lookandfeel/plaf.html
		 */
		try {
			for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager
					.getInstalledLookAndFeels()) {
				if ("Nimbus".equals(info.getName())) {
					javax.swing.UIManager.setLookAndFeel(info.getClassName());
					break;
				}
			}
		} catch (ClassNotFoundException ex) {
			java.util.logging.Logger
					.getLogger(DettagliTaccuino.class.getName()).log(
							java.util.logging.Level.SEVERE, null, ex);
		} catch (InstantiationException ex) {
			java.util.logging.Logger
					.getLogger(DettagliTaccuino.class.getName()).log(
							java.util.logging.Level.SEVERE, null, ex);
		} catch (IllegalAccessException ex) {
			java.util.logging.Logger
					.getLogger(DettagliTaccuino.class.getName()).log(
							java.util.logging.Level.SEVERE, null, ex);
		} catch (javax.swing.UnsupportedLookAndFeelException ex) {
			java.util.logging.Logger
					.getLogger(DettagliTaccuino.class.getName()).log(
							java.util.logging.Level.SEVERE, null, ex);
		}
		// </editor-fold>

		/* Create and display the form */
		java.awt.EventQueue.invokeLater(new Runnable() {
			public void run() {
				new DettagliTaccuino(null).setVisible(true);
			}
		});
	}

	// Variables declaration - do not modify//GEN-BEGIN:variables
	private javax.swing.JButton buttonAggiungi;
	private javax.swing.JButton buttonCancella;
	private javax.swing.JButton buttonModifica;
	private javax.swing.JPanel jPanel2;
	private javax.swing.JScrollPane jScrollPane1;
	private javax.swing.JLabel labelTitolo;
	private javax.swing.JTable tableNote;
	// End of variables declaration//GEN-END:variables
}
